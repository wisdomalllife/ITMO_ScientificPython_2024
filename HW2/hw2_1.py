# -*- coding: utf-8 -*-
"""HW2_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xsl0cmKAa2kB37lPu_SvuA6DmmrlJUF6
"""

import requests
import json
import re
import numpy as np

"""Uniprot"""

# O60494 - Cubilin (human)
# Q9JLB4 - Cubilin (mouse)

resp =  requests.get("https://rest.uniprot.org/uniprotkb/accessions", params={'accessions': ['O60494', 'Q9JLB4']})

resp = resp.json()

print('Response keys:', resp['results'][0].keys() )
print('Response genes:', resp['results'][0]['genes'])

def get_uniprot(ids: list):
  accessions = ','.join(ids)
  endpoint = "https://rest.uniprot.org/uniprotkb/accessions"
  http_args = {'params': {'accessions': accessions}}
  return requests.get(endpoint, **http_args)

def uniprot_parse_response(resp: dict):
    resp = resp.json()
    resp = resp["results"]
    output = {}
    for val in resp:
        acc = val['primaryAccession']
        species = val['organism']['scientificName']
        gene = val['genes']
        seq = val['sequence']
        output[acc] = {'organism':species, 'geneInfo':gene, 'sequenceInfo':seq, 'type':'protein'}

    return output

"""Testing"""

my_ids = ['O60494', 'Q9JLB4']
resp = get_uniprot(my_ids)
uniprot_parse_response(resp)

"""ENSEMBL"""

id = json.dumps({'ids' : ['ENSG00000157764', 'ENSG00000248378']})
headers={ "Content-Type" : "application/json", "Accept" : "application/json"}
resp = requests.post("https://rest.ensembl.org/lookup/id", headers=headers, data=id)
resp = resp.json()

print('Response keys:', resp.keys())
print('Response in readable format:', repr(resp))

def get_ensembl(ids: list):
  id = json.dumps({'ids': ids})
  endpoint = "https://rest.ensembl.org/lookup/id"
  headers={ "Content-Type" : "application/json", "Accept" : "application/json"}
  http_function = requests.post
  http_args = {'headers': headers,'data': id}
  return http_function(endpoint, **http_args)

def ensembl_parse_response(resp: dict):
    resp = resp.json()
    output = {}
    for key,value in resp.items():
        species = resp[key]['species']
        descr = resp[key]['description']
        otype = resp[key]['object_type']
        biotype = resp[key]['biotype']
        start = resp[key]['start']
        end = resp[key]['end']
        output[key] = {'organism':species, 'start': start, 'end': end, 'Info':descr, 'object_type':otype, 'biotype':biotype}
    return output

"""Testing"""

my_ids = ['ENSG00000157764', 'ENSG00000248378']
resp = get_ensembl(my_ids)
ensembl_parse_response(resp)

"""Task2"""

"""https://www.ensembl.org/info/genome/stable_ids/prefixes.html"""
"""Regular expressions for ID"""
#RE Uniprot:
reuni = '[OPQ][0-9][A-Z0-9]{3}[0-9]|[A-NR-Z][0-9]([A-Z][A-Z0-9]{2}[0-9]){1,2}'

#RE ENSEMBL:  ENS[species prefix][feature type prefix][a unique eleven digit number]
resem = 'ENS[A-Z]{1,6}[0-9]{11}|MGP_[A-Za-z0-9]{2,10}_(E|G|P|R|T|GT|FM)[0-9]+'
#resem = '^((ENS[FPTG]\\d{11}(\\.\\d+)?)|(FB\\w{2}\\d{7})|(Y[A-Z]{2}\\d{3}[a-zA-Z](\\-[A-Z])?)|([A-Z_a-z0-9]+(\\.)?(t)?(\\d+)?([a-z])?))$'
#resem = 'ENS[A-Z]+[0-9]{11}|[A-Z]{3}[0-9]{3}[A-Za-z](-[A-Za-z])?|CG[0-9]+|[A-Z0-9]+\.[0-9]+|YM[A-Z][0-9]{3}[a-z][0-9]'
#resem = '(ENS(|MUS|RNO)G\d{11})|(Y[A-P][LR]\d{3}[CW](-[A-G])?)'

def parse_response(ids: list):
  if np.all([bool(re.match(reuni, gene)) for gene in ids]):
    print("Uniprot ID")
    resp = get_uniprot(ids)
    output = uniprot_parse_response(resp)
  elif np.all([bool(re.match(resem, gene)) for gene in ids]):
    print("Ensembl ID")
    resp = get_ensembl(ids)
    output = ensembl_parse_response(resp)
  else:
    print("Not match")
    return
  return output

"""Testing"""

my_ids = ['ENSG00000157764', 'ENSG00000248378','ENSDARG00000024771']
#my_ids = ['MGP_129S1SvImJ_G0019185', 'MGP_NODShiLtJ_G0019038','MGP_LPJ_G0019086']
#my_ids = ['O60494', 'Q9JLB4']
#my_ids = ['O60494', 'AAAA4']
parse_response(my_ids)
